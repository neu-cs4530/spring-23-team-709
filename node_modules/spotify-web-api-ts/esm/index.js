var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import axios from 'axios';
import qs from 'qs';
import { AlbumsApi } from './apis/AlbumsApi';
import { ArtistsApi } from './apis/ArtistsApi';
import { BrowseApi } from './apis/BrowseApi';
import { EpisodesApi } from './apis/EpisodesApi';
import { FollowApi } from './apis/FollowApi';
import { LibraryApi } from './apis/LibraryApi';
import { PersonalizationApi } from './apis/PersonalizationApi';
import { PlayerApi } from './apis/PlayerApi';
import { PlaylistsApi } from './apis/PlaylistsApi';
import { SearchApi } from './apis/SearchApi';
import { ShowsApi } from './apis/ShowsApi';
import { TracksApi } from './apis/TracksApi';
import { UsersApi } from './apis/UsersApi';
import { TOKEN_URL } from './constants';
import { encodeToBase64 } from './helpers/encodeToBase64';
import { getAuthorizationUrl, } from './helpers/getAuthorizationUrl';
import { Http } from './helpers/Http';
export class SpotifyWebApi {
    constructor(options) {
        var _a, _b, _c, _d;
        this.clientId = (_a = options === null || options === void 0 ? void 0 : options.clientId) !== null && _a !== void 0 ? _a : '';
        this.clientSecret = (_b = options === null || options === void 0 ? void 0 : options.clientSecret) !== null && _b !== void 0 ? _b : '';
        this.redirectUri = (_c = options === null || options === void 0 ? void 0 : options.redirectUri) !== null && _c !== void 0 ? _c : '';
        this.http = new Http((_d = options === null || options === void 0 ? void 0 : options.accessToken) !== null && _d !== void 0 ? _d : '');
        this.albums = new AlbumsApi(this.http);
        this.artists = new ArtistsApi(this.http);
        this.browse = new BrowseApi(this.http);
        this.episodes = new EpisodesApi(this.http);
        this.follow = new FollowApi(this.http);
        this.library = new LibraryApi(this.http);
        this.personalization = new PersonalizationApi(this.http);
        this.player = new PlayerApi(this.http);
        this.playlists = new PlaylistsApi(this.http);
        this.search = new SearchApi(this.http);
        this.shows = new ShowsApi(this.http);
        this.tracks = new TracksApi(this.http);
        this.users = new UsersApi(this.http);
    }
    getAccessToken() {
        return this.http.getAccessToken();
    }
    setAccessToken(accessToken) {
        this.http.setAccessToken(accessToken);
    }
    getClientId() {
        return this.clientId;
    }
    getClientSecret() {
        return this.clientSecret;
    }
    getRedirectUri() {
        return this.redirectUri;
    }
    getRefreshableAuthorizationUrl(options) {
        return getAuthorizationUrl(this.clientId, this.redirectUri, 'code', options);
    }
    getTemporaryAuthorizationUrl(options) {
        return getAuthorizationUrl(this.clientId, this.redirectUri, 'token', options);
    }
    getRefreshableUserTokens(code) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield axios.post(TOKEN_URL, qs.stringify({
                code,
                grant_type: 'authorization_code',
                redirect_uri: this.redirectUri,
            }), {
                headers: {
                    Authorization: `Basic ${encodeToBase64(`${this.clientId}:${this.clientSecret}`)}`,
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            });
            return response.data;
        });
    }
    getRefreshedAccessToken(refreshToken) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield axios.post(TOKEN_URL, qs.stringify({
                grant_type: 'refresh_token',
                refresh_token: refreshToken,
            }), {
                headers: {
                    Authorization: `Basic ${encodeToBase64(`${this.clientId}:${this.clientSecret}`)}`,
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            });
            return response.data;
        });
    }
    getTemporaryAppTokens() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield axios.post(TOKEN_URL, qs.stringify({
                grant_type: 'client_credentials',
            }), {
                headers: {
                    Authorization: `Basic ${encodeToBase64(`${this.clientId}:${this.clientSecret}`)}`,
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            });
            return response.data;
        });
    }
}
//# sourceMappingURL=index.js.map