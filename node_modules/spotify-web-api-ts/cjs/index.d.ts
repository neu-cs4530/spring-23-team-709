import { AlbumsApi } from './apis/AlbumsApi';
import { ArtistsApi } from './apis/ArtistsApi';
import { BrowseApi } from './apis/BrowseApi';
import { EpisodesApi } from './apis/EpisodesApi';
import { FollowApi } from './apis/FollowApi';
import { LibraryApi } from './apis/LibraryApi';
import { PersonalizationApi } from './apis/PersonalizationApi';
import { PlayerApi } from './apis/PlayerApi';
import { PlaylistsApi } from './apis/PlaylistsApi';
import { SearchApi } from './apis/SearchApi';
import { ShowsApi } from './apis/ShowsApi';
import { TracksApi } from './apis/TracksApi';
import { UsersApi } from './apis/UsersApi';
import { GetAuthorizationUrlOptions } from './helpers/getAuthorizationUrl';
import { GetRefreshableUserTokensResponse, GetRefreshedAccessTokenResponse, GetTemporaryAppTokensResponse } from './types/SpotifyAuthorization';
declare type SpotifyWebApiOptions = {
    accessToken?: string;
    clientId?: string;
    clientSecret?: string;
    redirectUri?: string;
};
export declare class SpotifyWebApi {
    private clientId;
    private clientSecret;
    private redirectUri;
    private http;
    albums: AlbumsApi;
    artists: ArtistsApi;
    browse: BrowseApi;
    episodes: EpisodesApi;
    follow: FollowApi;
    library: LibraryApi;
    personalization: PersonalizationApi;
    player: PlayerApi;
    playlists: PlaylistsApi;
    search: SearchApi;
    shows: ShowsApi;
    tracks: TracksApi;
    users: UsersApi;
    constructor(options?: SpotifyWebApiOptions);
    getAccessToken(): string;
    setAccessToken(accessToken: string): void;
    getClientId(): string;
    getClientSecret(): string;
    getRedirectUri(): string;
    getRefreshableAuthorizationUrl(options?: GetAuthorizationUrlOptions): string;
    getTemporaryAuthorizationUrl(options?: GetAuthorizationUrlOptions): string;
    getRefreshableUserTokens(code: string): Promise<GetRefreshableUserTokensResponse>;
    getRefreshedAccessToken(refreshToken: string): Promise<GetRefreshedAccessTokenResponse>;
    getTemporaryAppTokens(): Promise<GetTemporaryAppTokensResponse>;
}
export {};
