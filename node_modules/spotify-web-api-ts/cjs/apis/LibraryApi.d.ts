import { Http } from '../helpers/Http';
import { GetSavedAlbumsOptions, GetSavedShowsOptions, GetSavedTracksOptions, RemoveSavedShowsOptions } from '../types/SpotifyOptions';
import { GetSavedAlbumsResponse, GetSavedShowsResponse, GetSavedTracksResponse } from '../types/SpotifyResponses';
export declare class LibraryApi {
    private http;
    constructor(http: Http);
    areAlbumsSaved(albumIds: string[]): Promise<boolean[]>;
    areShowsSaved(showIds: string[]): Promise<boolean[]>;
    areTracksSaved(trackIds: string[]): Promise<boolean[]>;
    getSavedAlbums(options?: GetSavedAlbumsOptions): Promise<GetSavedAlbumsResponse>;
    getSavedShows(options?: GetSavedShowsOptions): Promise<GetSavedShowsResponse>;
    getSavedTracks(options?: GetSavedTracksOptions): Promise<GetSavedTracksResponse>;
    isAlbumSaved(albumId: string): Promise<boolean>;
    isShowSaved(showId: string): Promise<boolean>;
    isTrackSaved(trackId: string): Promise<boolean>;
    removeSavedAlbum(albumId: string): Promise<void>;
    removeSavedAlbums(albumIds: string[]): Promise<void>;
    removeSavedShow(showId: string, options?: RemoveSavedShowsOptions): Promise<void>;
    removeSavedShows(showIds: string[], options?: RemoveSavedShowsOptions): Promise<void>;
    removeSavedTrack(trackId: string): Promise<void>;
    removeSavedTracks(trackIds: string[]): Promise<void>;
    saveAlbum(albumId: string): Promise<void>;
    saveAlbums(albumIds: string[]): Promise<void>;
    saveShow(showId: string): Promise<void>;
    saveShows(showIds: string[]): Promise<void>;
    saveTrack(trackId: string): Promise<void>;
    saveTracks(trackIds: string[]): Promise<void>;
}
